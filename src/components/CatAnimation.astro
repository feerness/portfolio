---
// Minimalist cat head silhouette with site's aesthetic
interface Props {
  size?: 'small' | 'medium' | 'large';
}

const { size = 'medium' } = Astro.props;
---

<div class={`cat-container ${size}`}>
  <div class="cat-silhouette">
    <!-- Cat head silhouette -->
    <div class="cat-head">
      <!-- Cat ears -->
      <div class="cat-ear left"></div>
      <div class="cat-ear right"></div>
    </div>
    
    <!-- Floating hearts -->
    <div class="heart heart-1">ðŸ’œ</div>
    <div class="heart heart-2">ðŸ’™</div>
    <div class="heart heart-3">ðŸ’œ</div>
  </div>
  
  <!-- Ground shadow -->
  <div class="shadow"></div>
</div>

<style>
  .cat-container {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .cat-container.small {
    width: 150px;
    height: 150px;
  }

  .cat-container.medium {
    width: 200px;
    height: 200px;
  }

  .cat-container.large {
    width: 280px;
    height: 280px;
  }

  .cat-silhouette {
    position: relative;
    animation: gentleFloat 4s ease-in-out infinite;
  }

  .cat-head {
    position: relative;
    width: 120px;
    height: 100px;
    background: linear-gradient(145deg, var(--gradient-stop-1), var(--gradient-stop-2));
    border-radius: 50%;
    margin: 0 auto;
    box-shadow: var(--shadow-md);
    animation: subtleGlow 3s ease-in-out infinite;
  }

  /* Cat ears - more defined and cat-like */
  .cat-ear {
    position: absolute;
    width: 35px;
    height: 45px;
    background: linear-gradient(145deg, var(--gradient-stop-1), var(--gradient-stop-2));
    border-radius: 50% 50% 0 0;
    top: -25px;
    animation: earTwitch 5s ease-in-out infinite;
  }

  .cat-ear.left {
    left: 20px;
    transform: rotate(-20deg);
    animation-delay: 0s;
  }

  .cat-ear.right {
    right: 20px;
    transform: rotate(20deg);
    animation-delay: 0.5s;
  }

  /* Hearts */
  .heart {
    position: absolute;
    font-size: 16px;
    animation: floatHeart 4s ease-in-out infinite;
    opacity: 0.7;
  }

  .heart-1 {
    top: -30px;
    left: -40px;
    animation-delay: 0s;
  }

  .heart-2 {
    top: -20px;
    right: -45px;
    animation-delay: 1.5s;
  }

  .heart-3 {
    top: 30px;
    left: -50px;
    animation-delay: 3s;
  }

  /* Shadow */
  .shadow {
    position: absolute;
    bottom: -30px;
    width: 100px;
    height: 15px;
    background: radial-gradient(ellipse, rgba(0,0,0,0.1) 0%, transparent 70%);
    border-radius: 50%;
    animation: shadowPulse 4s ease-in-out infinite;
  }

  /* Animations */
  @keyframes gentleFloat {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-8px); }
  }

  @keyframes subtleGlow {
    0%, 100% { 
      box-shadow: var(--shadow-md);
      transform: scale(1);
    }
    50% { 
      box-shadow: var(--shadow-lg);
      transform: scale(1.02);
    }
  }

  @keyframes earTwitch {
    0%, 90%, 100% { transform: rotate(var(--initial-rotation)); }
    95% { transform: rotate(calc(var(--initial-rotation) + 5deg)); }
  }

  .cat-ear.left {
    --initial-rotation: -20deg;
  }

  .cat-ear.right {
    --initial-rotation: 20deg;
  }

  @keyframes floatHeart {
    0% { transform: translateY(0px) scale(0.8); opacity: 0; }
    25% { opacity: 0.7; }
    75% { opacity: 0.7; }
    100% { transform: translateY(-40px) scale(1.1); opacity: 0; }
  }

  @keyframes shadowPulse {
    0%, 100% { transform: scale(1); opacity: 0.1; }
    50% { transform: scale(1.05); opacity: 0.15; }
  }

  /* Responsive */
  @media (max-width: 50em) {
    .cat-container.medium {
      width: 160px;
      height: 160px;
    }
    
    .cat-head {
      width: 100px;
      height: 85px;
    }

    .cat-ear {
      width: 30px;
      height: 38px;
      top: -20px;
    }

    .cat-ear.left {
      left: 18px;
    }

    .cat-ear.right {
      right: 18px;
    }
  }
</style> 